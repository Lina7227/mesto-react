{"version":3,"sources":["images/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/Api.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup .js","components/DeleteCardPopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","like","cardLikeButtonClassName","link","name","onClick","type","length","Main","onEditProfile","onAddPlace","onEditAvatar","cards","avatar","about","map","Footer","ImagePopup","onClose","api","baseUrl","token","handleResponse","res","ok","json","Promise","reject","status","this","_baseUrl","_token","fetch","headers","authorization","then","data","method","body","JSON","stringify","cardId","likeStatus","PopupWithForm","props","isOpen","noValidate","onSubmit","title","children","button","buttonSubmitText","EditProfilePopup","useState","setName","description","setDescription","useEffect","evt","preventDefault","onUpdateUser","id","required","minLength","maxLength","autoComplete","placeholder","value","onChange","target","EditAvatarPopup","refAvatar","useRef","current","onUpdateAvatar","ref","AddPlacePopup","cardName","setCardName","cardLink","setCardLink","DeleteCardPopup","onSubmitDeleteCard","App","isEditAvatarPopupOpen","onEditAvatarPopupOpen","isEditProfilePopupOpen","onEditProfilePopupOpen","isAddPlacePopupOpen","onAddPlacePopupOpen","isDeleteCardPopup","onDeleteCardPopup","selectedCard","setSelectedCard","setCurrentUser","setCards","cardDelete","setCardDelete","profilePopupButtonText","setProfilePopupButtonText","avatarPopupButtonText","setAvatarPopupButtonText","placePopupButtonText","setPlacePopupButtonText","removePopupButtonText","setRemovePopupButtonText","closeAllPopups","handleOverlayClick","classList","contains","document","addEventListener","removeEventListener","handleEscapeClick","key","all","getUser","getInitialCards","userData","catch","err","console","log","Provider","changeCardLikeStatus","newCard","state","c","user","setUser","finally","cardNew","addCard","setUserAvatar","removeCard","newCards","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d3576047.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.bbe2a6ea.svg\";","import logo from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <img src={logo} alt=\"Логотип\" className=\"header__logo\"/>\r\n        </header>\r\n\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst CurrentUserContext = React.createContext();\r\n\r\nexport default CurrentUserContext;","import React from 'react';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\n\r\nfunction Card({ card, onCardClick, onCardLike, onCardDelete }) {\r\n\r\n    function handleClick() {\r\n        onCardClick(card);\r\n    }\r\n    \r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const isOwn = card.owner._id === currentUser._id;\r\n\r\n    const cardDeleteButtonClassName = `element__remove ${isOwn ? 'element__remove_visible' : 'element__remove_hidden'}`;\r\n    \r\n    const isLiked = card.likes.some(like => like._id === currentUser._id);\r\n\r\n    const cardLikeButtonClassName = `element__emotion ${isLiked ? 'element__emotion_active' : 'element__emotion'}`;\r\n\r\n    function handleLike() {\r\n        onCardLike(card);\r\n    }\r\n\r\n    function handleDeleteClick() {\r\n        onCardDelete(card);\r\n    }\r\n\r\n    return (\r\n\r\n        <li className=\"element\">\r\n        \r\n            <img \r\n                src={card.link}\r\n                alt={card.name}\r\n                className=\"element__image\"\r\n                onClick={handleClick}\r\n            />\r\n            \r\n            <button\r\n                type=\"button\" aria-label=\"удалить карточку\"\r\n                className={cardDeleteButtonClassName}\r\n                onClick={handleDeleteClick}\r\n            ></button>\r\n\r\n            <div className=\"element__description\">\r\n                <h2 className=\"element__title\">{card.name}</h2>\r\n                <div className=\"element__rate\">\r\n                    <button\r\n                        type=\"button\" aria-label=\"оценить фото\"\r\n                        className={cardLikeButtonClassName}\r\n                        onClick={handleLike}\r\n                    ></button>\r\n                    <h3 className=\"element__number\">{card.likes.length}</h3>\r\n                </div>\r\n                \r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\n\r\nfunction Main({onEditProfile, onAddPlace, onEditAvatar, onCardClick, onCardLike, onCardDelete, cards}) {\r\n\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    return (\r\n        <main className=\"content\">\r\n            <section className=\"profile\">\r\n                <div className=\"profile__edit-avatar\">\r\n                    <img src={`${currentUser.avatar}`} alt=\"автарка пользователя\" className=\"profile__avatar\"/>\r\n                    <button type=\"button\" aria-label=\"открыть поле добавления аватарки\" onClick={onEditAvatar} className=\"profile__avatar-button\"></button>\r\n                </div>\r\n                \r\n                <div className=\"profile__info\">\r\n                    <div className=\"profile__edit\">\r\n                        <h1 className=\"profile__title\">{currentUser.name}</h1>\r\n                        <p className=\"profile__subtitle\">{currentUser.about}</p>\r\n                    </div>\r\n                    \r\n                    <button type=\"button\" aria-label=\"открыть попап\" className=\"profile__edit-button\" onClick={onEditProfile}></button> \r\n                </div>\r\n                <button type=\"button\" aria-label=\"открыть поле добавления фото\" className=\"profile__add-button\" onClick={onAddPlace}></button>\r\n            </section>  \r\n\r\n\r\n            <section className=\"elements\">\r\n                <ul className=\"elements__table\">\r\n                    {cards.map((card) => (\r\n                        \r\n                            <Card\r\n                                key={card._id}\r\n                                card={card}\r\n                                onCardClick={onCardClick}\r\n                                onCardLike={onCardLike}\r\n                                onCardDelete={onCardDelete}\r\n                            />\r\n                        )\r\n                    )}\r\n\r\n              \r\n                </ul>\r\n\r\n            </section>\r\n      \r\n\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;","function Footer() {\r\n    return (\r\n\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">&copy; 2021 Mesto Russia</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction ImagePopup({card, onClose}) {\r\n    \r\n    return (\r\n        <div className={`popup popup_images ${card.link ? \"popup_opened\" : \"\" }`}>\r\n\r\n            <div className=\"popup__content popup__content_image\">\r\n                <button type=\"button\" aria-label=\"закрыть попап\" className=\"popup__close popup__close_image\" onClick={onClose}></button>\r\n                <figure>\r\n                    <img src={card.link} alt={card.name} className=\"popup__image\"/>\r\n                    <figcaption className=\"popup__title\">{card.name}</figcaption>\r\n                </figure>\r\n            </div>\r\n                \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImagePopup;","class Api{\r\n    constructor({baseUrl, token}){\r\n        this._baseUrl = baseUrl;\r\n        this._token = token;\r\n    }\r\n\r\n    // возврат ответа сервера об ошибке\r\n    handleResponse = (res) => {\r\n        if(res.ok){\r\n            return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`)\r\n    } \r\n\r\n    // запрос о получении информации о пользователе\r\n    getUser() {\r\n        return fetch(`${this._baseUrl}/users/me`, {\r\n            headers: {\r\n                authorization: this._token\r\n            }\r\n        })\r\n        .then(this.handleResponse)\r\n \r\n    }\r\n    // сохранение данных пользователя\r\n    setUser(data) {\r\n        return fetch(`${this._baseUrl}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: `${data.name}`,\r\n                about: `${data.about}`,\r\n            })\r\n        })\r\n        .then(this.handleResponse)\r\n\r\n    }\r\n    \r\n    // отправка нового аватара\r\n    setUserAvatar(data) {\r\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                avatar: data.avatar,\r\n            })\r\n        })\r\n        .then(this.handleResponse)\r\n    }\r\n\r\n    // запрос на получение карточек\r\n    getInitialCards() {\r\n        return fetch(`${this._baseUrl}/cards`, {\r\n            method: 'GET',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(this.handleResponse)\r\n            \r\n    }\r\n\r\n    // сохранение карточек\r\n    addCard(data){\r\n        return fetch(`${this._baseUrl}/cards`, {\r\n          method:'POST',\r\n          headers: {\r\n            authorization: this._token,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            name: `${data.name}`,\r\n            link: `${data.link}`,\r\n          })\r\n        })\r\n        .then(this.handleResponse)\r\n\r\n    }\r\n\r\n    // удаление карточек\r\n    removeCard(cardId) {\r\n        return fetch(`${this._baseUrl}/cards/${cardId}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(this.handleResponse)\r\n            \r\n    }\r\n\r\n    // запрос поставить и удалить лайк с карточки\r\n    changeCardLikeStatus(cardId, likeStatus) {\r\n        return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n            method: (likeStatus ? 'PUT' : 'DELETE'),\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(this.handleResponse)\r\n            \r\n    }\r\n\r\n\r\n}\r\n\r\nconst apiConfigg = {\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-30',\r\n    token: '15dc4595-bdc3-4503-bc80-ce15dbc42c36'\r\n}\r\n\r\n// отправка запросов\r\nconst api = new Api(apiConfigg);\r\n\r\nexport default api;","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n    return (     \r\n\r\n        <div className={`popup ${props.isOpen ? \"popup_opened\" : \"\"}`}>\r\n            <div className={`popup__content popup__content_${props.name}`}>\r\n                <button type=\"button\" aria-label=\"закрыть попап\" className={`popup__close popup__close_form popup__close_${props.name}`} onClick={props.onClose}></button>\r\n                <form name={`${props.name}`} className={`form form_${props.name}`}noValidate onSubmit={props.onSubmit}>\r\n                    <h2 className=\"form__title\">{props.title}</h2>\r\n\r\n                    {props.children}\r\n\r\n                    <fieldset className=\"form__handler\">\r\n                        <button \r\n                            type=\"submit\" \r\n                            className={`form__button form__button_${props.button}`}>{props.buttonSubmitText}\r\n                        </button>\r\n                    </fieldset>\r\n                </form>                \r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default PopupWithForm;\r\n\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup(props) {\r\n\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const [name, setName] = React.useState('');\r\n    const [description, setDescription ] = React.useState('');\r\n\r\n    function handleChangeName(evt) {\r\n        setName(evt.target.value);\r\n    }\r\n\r\n    function handleChangeDescription(evt) {\r\n        setDescription(evt.target.value);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setName(currentUser.name);\r\n        setDescription(currentUser.about);\r\n    }, [currentUser, props.isOpen]);\r\n\r\n    function handleSubmit(evt) {\r\n        evt.preventDefault();\r\n\r\n        props.onUpdateUser({\r\n            name: name,\r\n            about: description\r\n        });\r\n    }\r\n    \r\n\r\n    return (\r\n\r\n        <PopupWithForm\r\n          name=\"edit\"\r\n          title=\"Редактировать профиль\"\r\n          button=\"add\"\r\n          buttonSubmitText={props.buttonSubmitText}\r\n          isOpen={props.isOpen}\r\n          onClose={props.onClose}\r\n          onSubmit={handleSubmit}\r\n        >\r\n            <fieldset className=\"form__input-container\">\r\n              <input \r\n                  type=\"text\" \r\n                  className=\"form__item form__item_input_name\" \r\n                  id=\"firstname\"\r\n                  name=\"name\"\r\n                  required\r\n                  minLength=\"2\"\r\n                  maxLength=\"40\" \r\n                  autoComplete=\"off\"\r\n                  placeholder=\"Имя\"\r\n                  value={name|| ''}\r\n                  onChange={handleChangeName}\r\n                  />\r\n              <span id=\"firstname-error\" className=\"error\"></span>\r\n              <input \r\n                  type=\"text\" \r\n                  className=\"form__item form__item_input_job\" \r\n                  id=\"jobname\"\r\n                  name=\"job\"\r\n                  required\r\n                  minLength=\"2\"\r\n                  maxLength=\"200\"\r\n                  autoComplete=\"off\"\r\n                  placeholder=\"введите свою специальность\"\r\n                  value={description || ''}\r\n                  onChange={handleChangeDescription}\r\n                  />\r\n              <span id=\"jobname-error\" className=\"error\"></span>\r\n          </fieldset>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup(props) {\r\n\r\n    const refAvatar = React.useRef();\r\n\r\n\r\n    function handleSubmit(evt) {\r\n\r\n        evt.preventDefault();\r\n\r\n        props.onUpdateAvatar({\r\n            avatar: refAvatar.current.value,\r\n        });\r\n    }\r\n\r\n    React.useEffect(() =>{\r\n        refAvatar.current.value = '';\r\n    },[props.isOpen])\r\n \r\n\r\n\r\n    return (\r\n\r\n        <PopupWithForm\r\n          name=\"avatar\"\r\n          title=\"Обновить аватар\"\r\n          button=\"add\"\r\n          buttonSubmitText={props.buttonSubmitText}\r\n          isOpen={props.isOpen}\r\n          onClose={props.onClose}\r\n          onSubmit={handleSubmit}\r\n        >\r\n            <fieldset className=\"form__input-container\">\r\n                \r\n                <input \r\n                    type=\"url\" \r\n                    className=\"form__item form__item_input_avatar\"\r\n                    id=\"avatar\" \r\n                    name=\"avatar\" \r\n                    required\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Ссылка на аватар\"\r\n                    ref={refAvatar}    \r\n                />\r\n                <span id=\"avatar-error\" className=\"error\"></span>\r\n            </fieldset>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default EditAvatarPopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup(props) {\r\n\r\n    const [cardName, setCardName] = React.useState('');\r\n    const [cardLink, setCardLink] = React.useState('');\r\n\r\n    function handleChangeCardName(evt) {\r\n        setCardName(evt.target.value);\r\n    }\r\n\r\n    function handleChangeCardLink(evt) {\r\n        setCardLink(evt.target.value);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setCardName('');\r\n        setCardLink('');\r\n    }, [props.isOpen]);\r\n\r\n    function handleSubmit(evt) {\r\n        evt.preventDefault();\r\n\r\n        props.onAddPlace ({\r\n            name: cardName,\r\n            link: cardLink\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <PopupWithForm\r\n          name=\"edit\"\r\n          title=\"Новое место\"\r\n          button=\"add\"\r\n          buttonSubmitText={props.buttonSubmitText}\r\n          isOpen={props.isOpen}\r\n          onClose={props.onClose}\r\n          onSubmit={handleSubmit}\r\n        >\r\n            <fieldset className=\"form__input-container\">\r\n              <input \r\n                  type=\"text\" \r\n                  className=\"form__item form__item_input_title\"\r\n                  id=\"title\" \r\n                  name=\"name\" \r\n                  required\r\n                  minLength=\"2\"\r\n                  maxLength=\"30\"\r\n                  autoComplete=\"off\"\r\n                  placeholder=\"Название\"\r\n                  value={cardName}\r\n                  onChange={handleChangeCardName}\r\n                />\r\n              <span id=\"title-error\" className=\"error\"></span> \r\n              <input \r\n                  type=\"url\" \r\n                  className=\"form__item form__item_input_link\"\r\n                  id=\"link\" \r\n                  name=\"link\" \r\n                  required\r\n                  autoComplete=\"off\"\r\n                  placeholder=\"Ссылка на картинку\"\r\n                  value={cardLink}\r\n                  onChange={handleChangeCardLink}\r\n                />\r\n              <span id=\"link-error\" className=\"error\"></span>\r\n          </fieldset>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default AddPlacePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction DeleteCardPopup(props) {\r\n\r\n    function handleSubmit(evt){\r\n      evt.preventDefault();\r\n      props.onSubmitDeleteCard(props.card)\r\n    }\r\n\r\n    return (\r\n\r\n        <PopupWithForm\r\n          name=\"remove\"\r\n          title=\"Вы уверены?\"\r\n          button=\"add-remove\"\r\n          buttonSubmitText={props.buttonSubmitText}\r\n          isOpen = {props.isOpen}\r\n          onClose={props.onClose}\r\n          onSubmit={handleSubmit}\r\n        />\r\n\r\n    )\r\n}\r\n\r\nexport default DeleteCardPopup;","import React from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport ImagePopup from './ImagePopup';\r\nimport api from '../utils/Api';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup ';\r\nimport DeleteCardPopup from './DeleteCardPopup';\r\n\r\nfunction App() {\r\n\r\n  const [isEditAvatarPopupOpen, onEditAvatarPopupOpen] = React.useState(false);\r\n  const [isEditProfilePopupOpen, onEditProfilePopupOpen] = React.useState(false);\r\n  const [isAddPlacePopupOpen, onAddPlacePopupOpen] = React.useState(false);\r\n  const [isDeleteCardPopup, onDeleteCardPopup] = React.useState(false);\r\n  const [selectedCard, setSelectedCard] = React.useState({link: '', name: ''});\r\n  const [currentUser, setCurrentUser] = React.useState({});\r\n  const [cards, setCards] = React.useState([]);\r\n  const [cardDelete, setCardDelete] = React.useState({});\r\n  const [profilePopupButtonText, setProfilePopupButtonText] = React.useState('Сохранить');\r\n  const [avatarPopupButtonText, setAvatarPopupButtonText] = React.useState('Сохранить');\r\n  const [placePopupButtonText, setPlacePopupButtonText] = React.useState('Создать');\r\n  const [removePopupButtonText, setRemovePopupButtonText] = React.useState('Да');\r\n\r\n  function handleEditAvatarClick() {\r\n    onEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  function handleEditProfileClick() {\r\n    onEditProfilePopupOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    onAddPlacePopupOpen(true);\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n  }\r\n\r\n  function handleCardDeleteClick(card) {\r\n    onDeleteCardPopup(true);\r\n    setCardDelete(card); \r\n  }\r\n\r\n  function closeAllPopups() {\r\n    onEditAvatarPopupOpen(false);\r\n    onEditProfilePopupOpen(false);\r\n    onAddPlacePopupOpen(false);\r\n    onDeleteCardPopup(false);\r\n    setSelectedCard({link: '', name: ''});\r\n    setCardDelete({link: '',  name: ''});\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    function handleOverlayClick(evt) {\r\n      if (evt.target.classList.contains('popup')) {\r\n        closeAllPopups();\r\n      }\r\n    }\r\n    document.addEventListener('mousedown', handleOverlayClick);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleOverlayClick);\r\n    }\r\n\r\n  },[]);\r\n\r\n  React.useEffect(() => {\r\n    function handleEscapeClick(evt) {\r\n      if (evt.key ==='Escape') {\r\n        closeAllPopups();\r\n      }\r\n    }\r\n    document.addEventListener('keyup', handleEscapeClick);\r\n\r\n    return () => {\r\n      document.removeEventListener('keyup', handleEscapeClick);\r\n    }\r\n\r\n  },[]);\r\n  \r\n  React.useEffect(() => {\r\n    Promise.all([api.getUser(), api.getInitialCards()])\r\n      .then(([userData, cards]) => {\r\n        setCurrentUser(userData);\r\n        setCards(cards)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n\r\n  }, [])\r\n\r\n  function handleCardLike(card) {\r\n      \r\n    const isLiked = card.likes.some(like => like._id === currentUser._id);\r\n      \r\n    api.changeCardLikeStatus(card._id, !isLiked)\r\n      .then((newCard) => {\r\n          setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\r\n      })\r\n      .catch((err) => {\r\n          console.log(err);\r\n      })\r\n  }\r\n    \r\n  function handleCardDelete(card) {\r\n    setRemovePopupButtonText('Удаление...')\r\n    api.removeCard(card._id)\r\n      .then(() => {\r\n        const newCards = cards.filter((evt) => evt._id !== card._id);\r\n        setCards(newCards);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .finally(() => {\r\n        setRemovePopupButtonText('Да');\r\n      })\r\n  }\r\n\r\n  function handleUpdateUser(user) {\r\n    setProfilePopupButtonText('Сохранение...');\r\n    api.setUser(user)\r\n      .then((user) => {\r\n        setCurrentUser(user);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .finally(() => {\r\n        setProfilePopupButtonText('Сохранить');\r\n      })\r\n  }\r\n\r\n  function handleUpdateAvatar(avatar) {\r\n    setAvatarPopupButtonText('Сохранение...');\r\n    api.setUserAvatar(avatar)\r\n      .then((avatar) => {\r\n        setCurrentUser(avatar);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .finally(() => {\r\n        setAvatarPopupButtonText('Сохранить');\r\n      })\r\n  }\r\n\r\n  function handleAddPlaceSubmit(cardNew) {\r\n    setPlacePopupButtonText('Добавление...');\r\n    api.addCard(cardNew)\r\n      .then((cardNew) => {\r\n        setCards([cardNew, ...cards]);\r\n        closeAllPopups();\r\n\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .finally(() => {\r\n        setPlacePopupButtonText('Создать');\r\n      })\r\n  }\r\n  \r\n  return (\r\n    <div className=\"page\">\r\n     \r\n     <CurrentUserContext.Provider value={currentUser}>\r\n        <Header/>\r\n        <Main\r\n          onEditAvatar={handleEditAvatarClick}\r\n          onEditProfile={handleEditProfileClick}\r\n          onAddPlace={handleAddPlaceClick}\r\n          onCardClick={handleCardClick}\r\n          onCardLike={handleCardLike}\r\n          onCardDelete={handleCardDeleteClick}\r\n          cards={cards}\r\n          />\r\n        <Footer/>\r\n\r\n        <EditProfilePopup \r\n          isOpen={isEditProfilePopupOpen} \r\n          onClose={closeAllPopups}\r\n          onUpdateUser={handleUpdateUser}\r\n          buttonSubmitText={profilePopupButtonText}\r\n        /> \r\n\r\n        <AddPlacePopup\r\n          isOpen={isAddPlacePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onAddPlace={handleAddPlaceSubmit}\r\n          buttonSubmitText={placePopupButtonText}\r\n        />\r\n\r\n        <EditAvatarPopup\r\n          isOpen={isEditAvatarPopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateAvatar={handleUpdateAvatar}\r\n          buttonSubmitText={avatarPopupButtonText}\r\n        />\r\n\r\n        <DeleteCardPopup\r\n          isOpen={isDeleteCardPopup}\r\n          onClose={closeAllPopups}\r\n          onSubmitDeleteCard={handleCardDelete}\r\n          card={cardDelete}\r\n          buttonSubmitText={removePopupButtonText}\r\n        />\r\n\r\n        <ImagePopup\r\n          card={selectedCard}\r\n          onClose={closeAllPopups}\r\n        />\r\n      </CurrentUserContext.Provider>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}